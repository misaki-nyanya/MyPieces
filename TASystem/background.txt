项目实践
背景描述
　　某学院总共有1500名学生。采用选课系统，让学生选择新学期的新课程。该学院管理员、各教师、学生是系统的用户。

教师和学生通过学号（工号）可以唯一确定，教师和学生用学号（工号）和密码完成注册，并可以通过学号（工号）和密码登录。

通过选课系统，教师录入课程信息，点击“发布课程信息”按钮后，系统将课程信息记入文本文件中。当用户要查看课程信息时，可点击“查看课程信息”按钮，系统读取文本文件中的课程信息，以列表的形式展现。系统还提供“修改课程信息”功能，该功能只对发布该课程的教师开放，教师在修改界面上修改信息，确认后，系统完成该课程信息的更新。


　　课程分为必修课和选修课两种。选修课的产生：任课教师决定好想要新开的课程后，登录系统，并发布课程信息。必修课由学院规定，只需要相关任课老师公布课程信息。


　　待课程信息公布后，学生可以查看这些课程，包括课程号、课程名字、是否必修、课时、学分、任课老师、时间、地点、助教…学生选择自己感兴趣的课，将课程添加到自己的选课列表中。此时，系统将生成一条“选课”记录，内容包括相关课程的课程号和学生的学号等信息。

若后悔所做的选择，可以退选。此时，系统找到相关的选课记录，并删除。

出于维护教师形象的考虑，教师不能出尔反尔，即不能删除自己公布的课程，所以公布课程必须三思而后行。但是教师可以更改课程信息，比如教师登录系统，查看其他教师发布的课程，发现自己的课与其他课程上课时间和上课地点有冲突，可以更改相关信息解决冲突问题。
　　另外，为了减轻教师负担，以及锻炼学生的能力，每一门课程都配有助教。助教由高年级的学生来担任。助教由任课老师指定，选定后，助教的学号、名字也会出现在课程信息中。实际上，教师指定助教，也属于修改课程信息，即修改课程的助教信息，修改确认后，系统会在数据库中更新课程信息。

系统功能需求

老师
注册和登录
发布课程
查看自己发布的课程列表
修改自己发布的课程信息
查看选择某课程的学生列表
登记课程成绩

学生：
注册和登录
查看自己的课程列表
选择课程
退选课程
查看课程成绩

管理员：
登录
查看老师列表、学生列表、课程列表、选课列表
删除老师记录、学生记录、课程记录、选课记录
修改自己登录密码


系统假设：
学生规模1500名左右，分为4个本科年级，2个研究生年级。
老师规模50名左右。
课程规模100门左右。
系统需提供学生和老师的注册和登录功能，以保证用户的使用权限。
管理员登录账号为admin，初始密码admin

开发要求
采用Java语言开发。
用户可以远程使用系统。
老师和学生采用图形化界面进行登录操作。
老师、学生、管理员都可以通过命令行方式登录操作。

开发阶段规划
迭代一  管理员查看和删除功能的设计与实现
迭代二  命令行方式下单机选课系统的设计与实现
迭代三  具有图形化界面和网络通信功能的选课系统的设计与实现
迭代一开发需求
管理员登录

　　参与者：管理员
　　流程：
①管理员输入登录命令。 Login admin [密码]
　　② 系统对登录名和密码进行验证：
如果登录名或密码均为空，提示错误输入。
如果登录名和密码同时不为空：
如果密码与存在相应的管理员密码想匹配，跳转到管理员操作界面。
如果不存在相应的管理员信息，或密码错误，提示错误，要求系统使用者重新输入。

管理员修改密码

　　参与者：管理员  ChangePassword admin [新密码]
　　前置条件：管理员已登录
　　流程：
①输入修改密码命令。
　　②系统对管理员的密码进行修改：
如果修改完成，提示修改成功。
如果修改发生异常或错误，提示修改不成功。
注：有时间可以完成附加功能，比如限制密码长度大于某个值等。

管理员查看数据列表功能

　　参与者：管理员  Show [数据表名称] 
　　前置条件：管理员已登录
    流程
①输入查看数据命令。
　　②根据查看数据表名称，显示相应的数据。
注：查看数据列表包括老师列表、学生列表、课程列表、选课列表

管理员删除数据记录功能
　　参与者：管理员  Delete [数据表名称] [编号]
　　前置条件：管理员已登录
    流程
①输入查看数据命令。
　　②根据查看数据表名称和编号，删除该数据表中该编号的记录。
注：删除数据列表包括老师列表、学生列表、课程列表、选课列表



迭代二开发需求
　　老师功能
老师注册
　　参与者：老师
　　流程：
① 老师输入注册的命令。 Register teacher [工号] [密码]
　　② 系统对工号和密码进行验证：
如果工号或密码为空，提示错误输入。
如果工号和密码同时不为空：
如果该工号已被注册，提示已被注册。
如果该工号未被注册，则提示注册成功。

老师登陆
　　参与者：老师
　　流程：
① 老师输入登陆的命令。 Login teacher [工号] [密码]
　　② 系统对工号和密码进行验证：
如果工号或密码为空，提示错误输入。
如果工号和密码同时不为空：
如果密码与存在相应的老师密码相匹配，跳转到老师操作界面。
如果不存在相应的老师信息，或密码错误，提示错误，要求系统使用者重新输入。

老师发布课程
　　参与者：老师
　　前置条件：老师已登录
　　流程：
① 老师输入发布课程的命令。 Publish
　　② 系统依次要求输入课程的各项信息，老师按照提示信息输入课程各项信息：
如果课程号为空，提示错误输入。
如果课程号不为空：
如果已存在该课程号的课程，提示课程号已被使用，跳转到发布课程界面。
如果不存在该课程号的课程，提示发布成功，跳转到老师操作界面。

老师查看自己发布的课程
　　参与者：老师
　　前置条件：老师已登录
　　流程：
① 老师输入查看自己发布的课程的命令。 Show course [课程号]
　　② 系统对课程号进行匹配：
如果课程号为空，提示错误输入。
如果课程号不为空：
如果课程号为“*”，则输出所有课程信息。
如果课程号不为“*”，并存在该课程号的课程，则输出该课程信息。
如果课程号不为“*”，并不存在该课程号的课程，则提示不存在该课程。

老师修改自己发布的课程
　　参与者：老师
　　前置条件：老师已登录
　　流程：
① 老师输入修改自己发布的课程的命令。 Update course [课程号]
　　② 系统对课程号进行匹配：
如果课程号为空，提示错误输入。
如果课程号不为空：
如果存在该课程号的课程，则系统依次输出该课程的各项原信息，并要求输入课程的各项新信息。输入完毕后，系统仍然对课程号进行重复性验证。
如果不存在该课程号的课程，则提示不存在该课程。

老师查看选择某课程的学生列表
　　参与者：老师
　　前置条件：老师已登录
　　流程：
① 老师输入查看选择某课程的学生列表的命令。 Show student [课程号]
　　② 系统对课程号进行匹配：
如果课程号为空，提示错误输入。
如果课程号不为空：
如果存在该课程号的课程，则系统列出选择该课程的学生信息。
如果不存在该课程号的课程，则提示不存在该课程。

老师登记课程成绩
　　参与者：老师
　　前置条件：老师已登录
　　流程：
① 老师输入登记课程成绩的命令。 Record score [课程号]
　　② 系统对课程号进行匹配：
如果课程号为空，提示错误输入。
如果课程号不为空：
如果不存在该课程号的课程，则提示不存在该课程。
如果存在该课程号的课程，则系统  依次列出(一个一个来)  选择该课程的学生信息，并提示输入该学生的成绩。


学生功能
学生注册
参与者：学生
流程：
	   ① 学生输入注册命令。 Register student [学号] [密码]
　　② 系统学生注册信息进行验证
如果密码为空，则系统提示注册失败
如果注册成功，显示注册成功信息，跳转到学生登陆界面
学生登陆
参与者：学生
前置条件：学生已经注册，并拥有自己的学号和密码
流程：
① 学生输入登陆命令。 Login student [学号] [密码]
② 系统对学号和密码进行验证
如果学号或密码为空，提示错误输入。
如果学号和密码同时不为空：
如果学号和密码相匹配，跳转到学生操作界面
如果不存在相应的信息或者密码错误，则提示错误，要求使用者重新输入。
学生查看自己的课程列表
参与者：学生 
前置条件：学生已经登陆
流程：
　　① 学生输入查看课程列表命令。Show mycourseList
　　② 系统查询学生的课程列表，并显示。
	学生选择课程
参与者：学生
前置条件：学生已经登陆
流程：
① 学生输入选择课程的命令。Select course [课程号]
② 系统查询课程号
如果课程号为空，提示错误输入。
如果课程号不为空
如果课程号对应课程信息不存在，则显示错误提示，并要求用户重新输入。
如果课程号对应课程信息存在，则生成一条选课记录存储，并提示用户选课成功，返回学生操作主界面。
学生退选课程
参与者：学生
前置条件：学生已经登陆
流程：
① 学生输入退选课程的命令。Quit course [课程号]
② 系统查询课程号
如果课程号为空，提示错误输入。
如果课程号不为空
如果课程号对应选课信息不存在，则显示错误提示，并要求用户重新输入。
如果课程号对应选课信息存在，则删除用户选课信息，并提示用户退选成功，返回学生操作主界面。
	查看课程成绩
参与者：学生
前置条件：学生已经登陆
流程：
① 学生输入查看课程成绩的命令。Show score [课程号]
② 系统查询课程号
如果课程号为空，提示错误输入。
如果课程号不为空
如果课程号对应此学生选课信息不存在，则显示错误提示，并要求用户重新输入。
如果课程号对应选课信息存在，则查询成绩，并显示。

迭代三开发需求
　　后续给出。
大作业评分办法
　　各个迭代阶段结束提交每个阶段的产物，最后安排当面检查。	
　　功能完成情况：30%（通过每个阶段提交截图、测试用例的实现结果给出、最后的当面检查）
	Coding style：10%（主要包括注释、命名（包括变量命名和类命名）、缩进等）
	ANT工具使用：10%（每个阶段的运行log、截图等）
	JUnit：10%（每个阶段的运行log、截图等）
	面向对象理解与实现：30%（代码中的面向对象思想设计、实现情况）

注：请大家对待小作业（每次lab作业）和大作业，根据往年经验，作业分数占的比重约一半左右。作业比重会根据实际卷面得分情况略作调整。初步想法：期中考试10%，期末考试50%，作业40%
